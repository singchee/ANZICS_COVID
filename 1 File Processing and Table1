library(tidyverse)
library(lubridate)
library(zoo)


#choose columns of interest
df1= APD %>%
	select(c(PatientID, HospitalClassification, 
                  JurisdictionName,postcode,SiteID, AGE,  SEX,AP3DIAG, AP3_SUBCODE, ELECT, ELECT_SURG, READMITTED,
                  PLAN_ICU, ECMO_IND, INV_IND, RENAL_IND, INOTROP_IND, NIV_IND, 
		  ICU_AD_DTM, ICU_HRS,ICU_SRCE, ICU_OUTCM, DIED_ICU,
                  HOSP_OUTCM, HOSP_HRS, DIED_HOSP,
		  ANZRODIsSMR, ANZRODRiskOfDeath, 
                  ANZRODRiskofDeath_old, Apache2Score, Apache3Score, PANDEMIC, FRAILTY)) %>%
		mutate(as.factor(DIED_HOSP), as.factor(HospitalClassification), as.factor(SiteID))


#Tidy dataset, replacing NAs with 0, Update ANZROD based on date ,  pandemic variable - admitted >= March 2020, state subgroup(VIC+NSW+ACT combined), and linking date

df2 = df1 %>% 
     
     replace_na(list(DIED_ICU=0, DIED_HOSP=0, PLAN_ICU=0, ELECT=0, ELECT_SURG=0, ECMO_IND=0, INV_IND=0, RENAL_IND=0, INOTROP_IND=0, VENTILATED=0, NIV_IND=0)) %>%
     mutate(ANZROD = ANZRODRiskofDeath_old,
            pandemicperiod = ifelse(ICU_AD_DTM >= as.Date("2020-03-01", origin = "1970-01-01"), 1, 0), 
            state_subgroup = ifelse(JurisdictionName %in% c('VIC', 'NSW', 'ACT'), 1, 0),
            date = paste(year(ICU_AD_DTM), month(ICU_AD_DTM), sep="-"),
            SEX = recode(SEX, NULL="O", I="O")) %>% 
	mutate(plan_surg = ifelse((PLAN_ICU == "1" & ELECT_SURG == "1") | ELECT == "1", 1, 0))
	    
as.factor(pandperiod), as.numeric(pandseries), as.factor(state_subgroup), 
#Apply exclusions/inclusions, Select only those with SMR, remove NZ, remove pandemic codes, readmissions, transfers
df3 = df2  %>%
    filter(ANZRODIsSMR == 1) %>% 
    filter(ICU_AD_DTM < as.Date("2022-07-01", origin = "1970-01-01")) %>%
    filter(JurisdictionName !="NZ") %>%
    filter(PANDEMIC !=1|is.na(PANDEMIC)) %>% 
    filter(!AP3_SUBCODE  %in% 
               c(101.03, 102.03, 104.02, 106.05, 107.06, 110.02, 
                 203.02, 204.02, 206.02, 208.02 , 209.02, 210.03, 212.03, 213.02, 
                 301.05, 
                 404.04, 
                 501.07, 503.02, 
                 704.12, 
                 901.08, 
                 1101.10 , 1102.02)) %>%
    filter(READMITTED == 0) %>%
    filter(ICU_OUTCM != 5) %>%
    filter(ICU_SRCE !=5 & ICU_SRCE !=6)
    
#assign time series
df3= df3 %>% 
	arrange(ICU_AD_DTM) %>%
     	mutate(date_month=zoo::as.yearmon(ICU_AD_DTM)) %>%
     	group_by(date_month) %>%
     	dplyr::mutate(series_month = as.factor(cur_group_id())) %>% # generate month sequence
	group_by(pandemicperiod) %>%
	   mutate(series_pand = match(date_month, unique(date_month))) %>%
     mutate(series_pand = ifelse(pandemicperiod == 0, 0, series_pand)) #generate pandemic month series

#get monthly raw mortality
df3_mort = df3 %>%
    group_by(month =lubridate::floor_date(ICU_AD_DTM, 'month')) %>%
    summarize(mort = mean(DIED_HOSP)*100)

#recode all AP3 codes into diagnostic categories
df3 = df3 %>%
    mutate(APACHE_diag = 
        case_when(
            (AP3DIAG >= 100 & AP3DIAG <= 199 ) | AP3DIAG == 1202 | AP3DIAG == 1203 | AP3DIAG == 1204 | AP3DIAG == 1205 | AP3DIAG == 1211 | AP3DIAG == 1213 ~ "CVS",
            AP3DIAG == 1206 | AP3DIAG == 1207 | AP3DIAG == 1208 | AP3DIAG == 1209 | AP3DIAG == 1210 | AP3DIAG == 1212 ~ "CardiacSurg", 
            (AP3DIAG >= 200 & AP3DIAG <= 299) | (AP3DIAG >= 1300 & AP3DIAG <= 1399) ~"Respiratory",
            (AP3DIAG >= 300 & AP3DIAG <= 399) | (AP3DIAG >= 1400 & AP3DIAG <= 1499) ~ "GastroIntestinal",
            (AP3DIAG >= 400 & AP3DIAG <= 499) | (AP3DIAG >= 1500 & AP3DIAG <= 1599) ~ "Neuro",
            AP3DIAG >= 500 & AP3DIAG <= 599 ~"Sepsis",
            (AP3DIAG >= 600 & AP3DIAG <= 699) | (AP3DIAG >= 1600 & AP3DIAG <= 1699) ~ "Trauma",
	    AP3DIAG >= 700 & AP3DIAG <= 799 ~ "Metabolic",
	    AP3DIAG >= 900 & AP3DIAG <= 999 ~ "Renal",
            (AP3DIAG >= 1000 & AP3DIAG <= 1199) | (AP3DIAG >= 800 & AP3DIAG <= 899) | AP3DIAG == "0"  ~ "Other"))
     
#get COVID cases per month
df3_covid = df2 %>% 
	filter(ANZRODIsSMR == 1) %>%
	filter(JurisdictionName !="NZ") %>%
	filter(PANDEMIC !=2| is.na(PANDEMIC)) %>%  #make sure filter keeps the ia.na values as well
	filter(AP3_SUBCODE  %in% 
	      c(204.02, 213.02)) %>%
      filter(READMITTED == 0) %>%
      filter(ICU_OUTCM != 5) %>%
      filter(ICU_SRCE !=5 & ICU_SRCE !=6) %>% 
      filter(as.Date(ICU_AD_DTM)>as.Date("2020/3/1")) %>% 
      group_by(month =lubridate::floor_date(ICU_AD_DTM, 'month')) %>%
      summarize(sum=n())
      
#get COVID cases per month for NSWVICACT   
df3_covid_nswvicact = df2 %>% 
    filter(state_subgroup == 1) %>%
    filter(ANZRODIsSMR == 1) %>%
    filter(JurisdictionName !="NZ") %>%
    filter(PANDEMIC !=2| is.na(PANDEMIC)) %>%  #make sure filter keeps the ia.na values as well
    filter(AP3_SUBCODE  %in% 
               c(204.02, 213.02)) %>%
    filter(READMITTED == 0) %>%
    filter(ICU_OUTCM != 5) %>%
    filter(ICU_SRCE !=5 & ICU_SRCE !=6) %>% 
    filter(as.Date(ICU_AD_DTM)>as.Date("2020/3/1")) %>% 
    group_by(month =lubridate::floor_date(ICU_AD_DTM, 'month'), .drop=FALSE) %>%
    summarize(sum=n())

#get COVID cases per month for other states   
df3_covid_other = df2 %>% 
    filter(state_subgroup == 0) %>%
    filter(ANZRODIsSMR == 1) %>%
    filter(JurisdictionName !="NZ") %>%
    filter(PANDEMIC !=2| is.na(PANDEMIC)) %>%  #make sure filter keeps the ia.na values as well
    filter(AP3_SUBCODE  %in% 
               c(204.02, 213.02)) %>%
    filter(READMITTED == 0) %>%
    filter(ICU_OUTCM != 5) %>%
    filter(ICU_SRCE !=5 & ICU_SRCE !=6) %>% 
    filter(as.Date(ICU_AD_DTM)>as.Date("2020/3/1")) %>% 
    group_by(month =lubridate::floor_date(ICU_AD_DTM, 'month'), .drop=FALSE) %>%
    summarize(sum=n())


#generate table 1

library(tableone)
catVars=c("SEX","PLAN_ICU", "DIED_ICU","DIED_HOSP", "INOTROP_IND", "NIV_IND", "RENAL_IND", "ECMO_IND", "INV_IND","ELECT_SURG", "APACHE_diag","plan_surg" )
tab = CreateTableOne(data = df3, vars =c("SEX", "AGE", "PLAN_ICU", "ELECT_SURG", "plan_surg",
                                         "Apache2Score", "Apache3Score","ANZROD", 
                                          "DIED_ICU","DIED_HOSP", 
                                          "HOSP_HRS", "ICU_HRS", 
                                          "APACHE_diag"), strata= "pandemicperiod", factorVars = catVars)
nonnormalVars = c("AGE", "Apache2Score", "Apache3Score","ANZROD", "HOSP_HRS", "ICU_HRS")					  
print(tab, nonnormal=nonnormalVars)

#generate data for 2018 onwards interventions
tab1 = df3 %>%
     filter(year(ICU_AD_DTM) >= 2018)
tab_int = CreateTableOne(data = tab1, vars =c("ECMO_IND", "INV_IND", "NIV_IND", "RENAL_IND", "INOTROP_IND"), strata= "pandemicperiod", factorVars = catVars)
nonnormalVars = c("AGE", "Apache2Score", "Apache3Score","ANZROD", "HOSP_HRS", "ICU_HRS")


#NSWVICACT


tab_statecompare = CreateTableOne(data = subset(df3, pandemicperiod == "1"), vars =c("SEX", "AGE", "PLAN_ICU", "ELECT_SURG", "plan_surg",
                                         "Apache2Score", "Apache3Score","ANZROD", 
                                         "DIED_ICU","DIED_HOSP", 
                                         "HOSP_HRS", "ICU_HRS", 
                                         "ECMO_IND", "INV_IND", "NIV_IND", "RENAL_IND", "INOTROP_IND", "APACHE_diag"), strata= "state_subgroup", factorVars = catVars)
print(tab_statecompare, nonnormal=nonnormalVars)
write.csv(print(tab_statecompare), file="tab_statecompare.csv")

#cause of death pre/post pandemic
tab_data = df3 %>%
    filter(DIED_HOSP == 1)

tab_died = CreateTableOne(data = tab_data, vars =c("APACHE_diag"), strata= "pandemicperiod", factorVars = catVars)

write.csv(print(tab_died), file="tab_died.csv")

 

---------------------------------------

