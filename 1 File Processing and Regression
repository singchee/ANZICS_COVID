library(dplyr)

data=.xls

#choose columns of interest
df1=select(updated_data2, c(anzrodriskofdeath, died_icu))

#selecting based on exclusions criteria 
df2 = filter(df1, sex== "M" & 
             age>= 18 & 
             preg_stat == "1")


#recoding values 
df1$diedhosp = ifelse(df1$== xxx | df1$xyz == 1, 1, 0)

# replacing NAs with 0
df1$diedever = ifelse(is.na(df1$DeathDate)== "TRUE", "0", "1")
df2$preg_stat = ifelse(is.na(df2$preg_stat), 0, 1)
df1$died_hosp[is.na(df1$died_hosp)] = 0

#remove rows with NAs
df1=filter(df1, !is.na(df1$age))



#descriptives
#print summary of data
write.csv(summary(data), "summary.csv")

# selecting only variables we need
df1= select(df1, sex, age, ralos)


#regression modelling
#generate regression model for binary outcome (mortality)
glm.binary = glm(died_hosp ~ age + ap3diag, 
                  data=df1, 
                  family=binomial)

#generate regression model for continuous outcome (eg. RALOS)
glm.cont = glm(ralos ~ age + ap3diag, 
               data=df1, 
               family=gaussian)

#get P values
summary(glm.binary)

#get 95% CI
confint(glm.binary)

#ROC modelling

#generate predicted outcomes for dataset
ROCpred = predict(glm.binary, 
                  type='response')
                  
#assign observed outcomes to cases 
pred = prediction(ROCpred, df1$died_hosp)

#calculate model performance
perf_auc = performance(pred, measure = "tpr", x.measure = "fpr")
perf_acc= performance(pred, measure = "acc")
max(perf_acc@y.values[[1]])

#AUC Plots and reports
plot(perf, col=rainbow(10))

perf_auc = performance(pred, measure = "auc")
perf_auc@y.values[[1]]

