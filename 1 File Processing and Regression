library(dplyr)

data=.xls

#choose columns of interest
df1=select(df1, )

#selecting based on exclusions criteria 
df1 = filter(data, sex== "M" & 
             age>= 18 & 
             preg_stat == "2")


#recoding values
df$diedhosp = ifelse(df1$== xxx | df1$xyz == 1, 1, 0)

#Linking corrected data
data=select(data,-c(ndideathdate, apddeathdate)) #remove old death data

data$key = paste(data$patientid, data$icu_ad_dtm) #create primary linking key for original 

#tidy corrected date file
dates$NDIDeath = as.Date(dates$NDIDeathDate, format= "%Y-%m-%d") #convert date
dates$key = paste(dates$PatientID, as.POSIXct(data2$ICU_AD_DTM, format = "%d/%m/%Y %H:%M")) #create primary linking key for corrected
dates$NDIDeath3 = as.Date(ifelse(dates$NDIDeath2 < "2000-1-1","",as.character(dates$NDIDeath2))) #remove invalid NDI death dates

#remove invalid APD death dates

dates$APDDeathDate2= ifelse(dates$APDDeathDate < dates$HOSP_AD_DTM,"",as.character(dates$APDDeathDate))

#Create combined death date (any death)
data3$DeathDate = as.Date(ifelse(data3$APDDeathDate2 == "NULL" | is.na(data3$APDDeathDate2), as.character(data3$NDIDeath3), data3$APDDeathDate2))


#Merge data

#NA handling
#remove rows with NAs
df1=filter(df1, !is.na(df1$age))

#replace NA with 0 if  applicable
df1$died_hosp[is.na(df1$died_hosp)] = 0

#descriptives
#print summary of data
write.csv(summary(data), "summary.csv")

# selecting only variables we need
df1= select(df1, sex, age, ralos)


#regression modelling
#generate regression model for binary outcome (mortality)
glm.binary = glm(died_hosp ~ age + ap3diag, 
                  data=df1, 
                  family=binomial)

#generate regression model for continuous outcome (eg. RALOS)
glm.cont = glm(ralos ~ age + ap3diag, 
               data=df1, 
               family=gaussian)

#get P values
summary(glm.binary)

#get 95% CI
confint(glm.binary)

#ROC modelling

#generate predicted outcomes for dataset
ROCpred = predict(glm.binary, 
                  type='response')
                  
#assign observed outcomes to cases 
pred = prediction(ROCpred, df1$died_hosp)

#calculate model performance
perf = performance(pred, measure = "tpr", x.measure = "fpr")

#AUC Plots and reports
plot(perf, col=rainbow(10))

auc_perf = performance(pred, measure = "auc")


