library(dplyr)

df1=.xls

#choose columns of interest
df2=select(df1, c(PatientID, HospitalClassification, 
                  JurisdictionName,postcode, AGE, ELECT,  SEX,AP3DIAG, AP3_SUBCODE, ELECT_SURG, READMITTED,
                  PLAN_ICU, ECMO_IND, INV_IND, RENAL_IND, INOTROP_IND, ICU_AD_DTM, ICU_HRS, 
                  HOSP_OUTCM, HOSP_HRS, DIED_ICU, DIED_HOSP, ICU_OUTCM, ANZRODIsSMR, ANZRODRiskOfDeath, 
                  ANZRODRiskofDeath_old, PANDEMIC, VENTILATED, FRAILTY))




# replacing NAs with 0
df2 = replace_na(df2, list(ELECT_SURG=0, ECMO_IND=0, INV_IND=0, RENAL_IND=0, INOTROP_IND=0, VENTILATED=0))

#Select only those with SMR
df3= filter(df2, df2$ANZRODIsSMR == 1)

#Generate pandemic variable - admitted >= March 2020
df3$pandemicperiod = ifelse(df3$ICU_AD_DTM >= as.Date("2020-03-01", origin = "1970-01-01"), 1, 0)

#Generate NSW+Vic+ACT flag
df3$state_subgroup = ifelse(df3$JurisdictionName %in% c('VIC', 'NSW', 'ACT'), 1, 0)


#Apply exclusions

#Remove pandmic codes
df4= filter(df3, df3$PANDEMIC  !=1)
df4= filter(df3, !df3$AP3_SUBCODE  %in% 
      c(101.03, 102.03, 104.02, 106.05, 107.06, 110.02, 
      203.02, 204.02, 206.02, 208.02 , 210.03, 212.03, 213.02, 
      301.05, 
      404.04, 
      501.07, 503.02, 
      704.12, 
      901.08, 
      1101.10 , 1102.02))
     
#remove readmissions
df4 = filter(df4, df4$READMITTED == 0)

#generate table 1
tab = CreateTableOne(data = df4, vars =c("SEX", "AGE", "PLAN_ICU", "DIED_ICU","DIED_HOSP"), strata= "pandemicperiod")
---------------------------------------

#compute LOS from ICU ad + dc time
df1$los = as.numeric(difftime(df1$icu_ds_dtm ,df1$icu_ad_dtm , units = c("days")))


#recoding values 
df1$diedhosp = ifelse(df1$== xxx | df1$xyz == 1, 1, 0)

#recode pregancy - replace NA to 0 first
df2$preg_stat = ifelse(is.na(df2$preg_stat), 0, 1)
df2 = filter(df2, preg_stat != 1 & preg_stat !=3)
#selecting based on exclusions criteria 
df2 = filter(df1, sex== "M" & 
             age>= 18 & 
             preg_stat == "1")

#remove rows with NAs
df1=filter(df1, !is.na(df1$age))

df1$diedever = ifelse(is.na(df1$DeathDate)== "TRUE", "0", "1")
df2$preg_stat = ifelse(is.na(df2$preg_stat), 0, 1)
df1$died_hosp[is.na(df1$died_hosp)] = 0




#descriptives
#print summary of data
write.csv(summary(data), "summary.csv")



#regression modelling
#generate regression model for binary outcome (mortality)
glm.binary = glm(died_hosp ~ age + ap3diag, 
                  data=df1, 
                  family=binomial)

#generate regression model for continuous outcome (eg. RALOS)
lm.cont = lm(ralos ~ age + ap3diag, 
               data=df1, 
               family=gaussian)

#get P values
summary(glm.binary)

#get 95% CI
confint(glm.binary)

#ROC modelling

#generate predicted outcomes for dataset
ROCpred = predict(glm.binary, 
                  type='response')
                  
#assign observed outcomes to cases 
pred = prediction(ROCpred, df1$died_hosp)

#calculate model performance
perf_auc = performance(pred, measure = "tpr", x.measure = "fpr")
perf_acc= performance(pred, measure = "acc")
max(perf_acc@y.values[[1]])

#AUC Plots and reports
plot(perf, col=rainbow(10))

perf_auc = performance(pred, measure = "auc")
perf_auc@y.values[[1]]

