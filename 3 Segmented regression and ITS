
#segmented analysis on non-seasonally adjusted data

#define data

its_data = its_all / its_nswvicact / its_others
seg.fit = lm(estimate ~ series, data= its_data)
segmented.fit <- segmented(seg.fit, seg.Z = ~series, psi=56)
summary(segmented.fit) #checkbreakpoint

#for all - 1 bp @ 60
is_data = its_all %>%
    mutate(bp= ifelse(series >=62, 1, 0))  %>%
    group_by(bp) %>%
    mutate(series_bp = match(month, unique(month))) %>%
    mutate(series_bp = ifelse(bp == 0, 0, series_bp))
    
summary(lm(estimate ~ series + series_bp + bp, data=ts_data))
write.csv(coef(lm(estimate ~ series + series_bp + bp, data=ts_data)), file = "its_all_LMresults.csv")

#for NSWVICACT - 1 bp @ 62
ts_data = its_nswvicact %>%
    mutate(bp= ifelse(series >=62, 1, 0))  %>%
    group_by(bp) %>%
    mutate(series_bp = match(month, unique(month))) %>%
    mutate(series_bp = ifelse(bp == 0, 0, series_bp))
    
summary(lm(estimate ~ series + series_bp + bp, data=ts_data))
write.csv(coef(lm(estimate ~ series + series_bp + bp, data=ts_data)), file = "its_all_LMresults.csv")

#for others - 2 BP identified 30 & 60
ts_data = its_data %>%
    mutate(bp= 
               case_when(series <30~0,
                         series >=30 ~ 1), 
           bp2 = case_when(series <60~0,
                         series >=60 ~ 1) 
           )  %>%
    group_by(bp) %>%
    mutate(series_bp = match(month, unique(month))) %>%
    mutate(series_bp = ifelse(bp == 0, 0, series_bp)) %>%
    ungroup() %>%
    group_by(bp2) %>%
    mutate(series_bp2 = match(month, unique(month))) %>%
    mutate(series_bp2 = ifelse(bp2 == 0, 0, series_bp2))
  
  

summary(lm(estimate ~ series + series_bp + bp + series_bp2 + bp2, data=ts_data))

write.csv(coef(lm(estimate ~ series + series_bp + bp, data=ts_data)), file = "its_all_LMresults.csv")
  
#ISGNORE BELOW##

#semented analysis on seasonal data

seg.fit = lm(ts ~ series_month, data= ts_noseason_df2)
segmented.fit <- segmented(seg.fit, seg.Z = ~series, psi=58) #guesstimated change in around month 58 (nov 2020) from visual plots
slope(segmented.fit)
summary(segmented.fit)

ts_noseason_df2 = ts_noseason_df2 %>%
    mutate(bp= ifelse(series_month >=65, 1, 0))  %>%
          group_by(bp) %>%
           mutate(series_bp = match(date, unique(date))) %>%
          mutate(series_bp = ifelse(bp == 0, 0, series_bp))
 
 its_data = ts_noseason_df2

its_mod=lm(ts ~ series_month + bp + series_bp, data=its_data)
summary(its_mod)

#save OR estimates as table 



plot_all= m1_all %>%
          tidy(effects = "fixed", conf.int = TRUE)%>% #extract fixed effect estimats
          filter(str_detect(term, "series")) %>% #filter out predictors that have "series" 
         mutate(across(c(estimate, starts_with("conf")), exp)) %>% #exponentiate estaimates and CI to get OR
          mutate(series = seq_along(1:nrow(.))) 

seg.fit = lm(estimate ~ series, data= m1_plot)

segmented.fit <- segmented(seg.fit, seg.Z = ~series, psi=58) #guesstimated change in around month 58 (nov 2020) from visual plots
slope(segmented.fit)
summary(segmented.fit)
