
#patient level multivariate regression analysis
#Link in time series variables for patient level analysis

df3 = df3 %>%
    mutate(ANZROD = ANZRODRiskofDeath_old, 
           yymm = zoo::as.yearmon(ICU_AD_DTM), 
           series = as.factor(as.numeric(factor(yymm)))) #create month-based sequence
	 
library(broom.mixed)
library(lme4)

m2other = glmer(DIED_HOSP ~ ANZRODRiskofDeath_old + as.factor(series) + HospitalClassification + (1|SiteID), data=ds3_other, family=binomial, control = glmerControl(optimizer = "bobyqa"),
          nAGQ = 1)
	  
m2other %>%
    tidy(effects = "fixed", conf.int = TRUE)%>% #extract fixed effect estimats
    filter(str_detect(term, "series")) %>% #filter out predictors that have "series" 
    mutate(across(c(estimate, starts_with("conf")), exp)) %>% #exponentiate estaimates and CI to get OR
    mutate(series = seq_along(1:nrow(.)))  %>% #generate monthly sequence
    ggplot(aes(series, estimate))+ #plot
    geom_point() +
    geom_smooth() +
    geom_linerange(aes(ymin = conf.low, ymax = conf.high)) +
    scale_x_continuous(breaks = scales::breaks_width(2))+
    geom_vline(xintercept = 39, linetype="dotted",color = "blue", size=1) +
    ylim(0.5, 1.5)

lattice::dotplot(ranef(m2other, which = "SiteID", condVar = TRUE), scales = list(y = list(alternating = 0))) #caterpillar plot for SiteID

plot_model(m2other, terms = c("HospitalClassificationPrivate", "HospitalClassificationRural / Regional", "HospitalClassificationTertiary")) #plot effects of hospitaltype

#ALTERNATIVE

m2NSWVICACT %>%
     tidy(effects = "fixed", conf.int = TRUE) %>%
     filter(str_detect(term, "series")) %>%
     mutate(across(c(estimate, starts_with("conf")), exp)) %>%
     ggplot(aes(term, estimate)) +
     geom_point() + 
     geom_linerange(aes(ymin = conf.low, ymax = conf.high))+
     geom_smooth()+
          scale_x_continuous(breaks = scales::breaks_width(2))+
          geom_vline(xintercept = 39, linetype="dotted",color = "blue", size=1)
   

summary(m)
write.csv(summary(m)$coefficients, file="coeff.csv")]

library(broom.mixed)
tidy(m,conf.int=TRUE,exponentiate=TRUE,effects="fixed")



------------

#get 95% CI
confint(glm.binary)

#ROC modelling

#generate predicted outcomes for dataset
ROCpred = predict(glm.binary, 
                  type='response')
                  
#assign observed outcomes to cases 
pred = prediction(ROCpred, df1$died_hosp)

#calculate model performance
perf_auc = performance(pred, measure = "tpr", x.measure = "fpr")
perf_acc= performance(pred, measure = "acc")
max(perf_acc@y.values[[1]])

#AUC Plots and reports
plot(perf, col=rainbow(10))

perf_auc = performance(pred, measure = "auc")
perf_auc@y.values[[1]]

