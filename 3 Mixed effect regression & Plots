
#patient level multivariate regression analysis

#assign relevant series sequence

df3= df3 %>% 
	arrange(ICU_AD_DTM) %>%
     	mutate(date_month=zoo::as.yearmon(ICU_AD_DTM)) %>%
     	group_by(date_month) %>%
     	dplyr::mutate(series_month = as.factor(cur_group_id())) %>% # generate month sequence
	group_by(pandemicperiod) %>%
	   mutate(series_pand = match(date_month, unique(date_month))) %>%
     mutate(series_pand = ifelse(pandemicperiod == 0, 0, series_pand)) #generate pandemic month series
      
	 
library(broom.mixed)
library(lme4)

#get estimates from ME regression without pandemic perioid adjustment

mod_ts = glmer(DIED_HOSP ~ ANZRODRiskofDeath_old + HospitalClassification + series_month + (1|SiteID), data=df3, family=binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 1)


#get monthly estimates from Mixed Effects regression

its = mod_ts %>%
     tidy(effects = "fixed", conf.int = TRUE)%>% #extract fixed effect estimats
     filter(str_detect(term, "series_month")) %>% #filter out predictors that have "series" 
     mutate(across(c(estimate, starts_with("conf")), exp)) %>% #exponentiate estaimates and CI to get OR
     mutate(series = seq_along(1:nrow(.)), pandperiod = ifelse(series>=38, 1, 0)) %>% #generate  month series and pandemic period (month 39 is series 38 due to reference category)
     group_by(pandperiod) %>%
     mutate(series_pand = 1:n()) %>% #generate post-pandemic monthly sequence
     mutate(series_pand = ifelse(pandperiod == 0, 0, series_pand))


#Plot adjusted OR for death

its %>%
     ggplot(aes(term, estimate)) + #plot
     geom_point() + 
     geom_linerange(aes(ymin = conf.low, ymax = conf.high))+
     geom_smooth()+
    scale_x_continuous(breaks = scales::breaks_width(2))+
    geom_vline(xintercept = 39, linetype="dotted",color = "blue", size=1) +
    ylim(0.6, 1.4) + 
    ylab("Adjusted Odds of Death") +
    xlab("Month of Admission") +
    ggtitle("Adjusted OR of Death Over Time (All Patients)")+
    annotate(geom="text", x=45, y=1.2,label="Pandemic Period",color="Black")


lattice::dotplot(ranef(m2other, which = "SiteID", condVar = TRUE), scales = list(y = list(alternating = 0))) #caterpillar plot for SiteID



#building a ME with interaction terms between pandemic period and trends + hospital mortality

df3 = within(df3, HospitalClassification <- relevel(HospitalClassification, ref = 4)) #set reference level for hospitals
m1_all = glmer(DIED_HOSP ~ ANZRODRiskofDeath_old + HospitalClassification + series_month + (1|SiteID), data=df3, family=binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 0)

plot_model(m2other, terms = c("HospitalClassificationPrivate", "HospitalClassificationRural / Regional", "HospitalClassificationTertiary")) #plot effects of hospitaltype

#generate interaction terms and plot interaction terms

p = plot_model(m1_all, terms = c("HospitalClassificationMetropolitan:pandemicperiod", "HospitalClassificationRural / Regional:pandemicperiod", "HospitalClassificationPrivate:pandemicperiod"))
p + ylim(0.75, 1.25)

#determine siteID effects
SiteID_effects = SiteID_effects %>%
    broom.mixed::tidy(m1_all, effects = "ran_vals", conf.int = TRUE) %>%
    mutate(across(c(estimate, starts_with("conf")), exp))

#ALTERNATIVE

m2NSWVICACT %>%
     tidy(effects = "fixed", conf.int = TRUE) %>%
     filter(str_detect(term, "series")) %>%
     mutate(across(c(estimate, starts_with("conf")), exp)) %>%
     ggplot(aes(term, estimate)) +
     geom_point() + 
     geom_linerange(aes(ymin = conf.low, ymax = conf.high))+
     geom_smooth()+
          scale_x_continuous(breaks = scales::breaks_width(2))+
          geom_vline(xintercept = 39, linetype="dotted",color = "blue", size=1)
   

summary(m)
write.csv(summary(m)$coefficients, file="coeff.csv")]

library(broom.mixed)
tidy(m,conf.int=TRUE,exponentiate=TRUE,effects="fixed")


